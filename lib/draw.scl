draw_line_from_to(from, to, ticks, block_config, line_config, offset) -> (
    default_block_config = {
        'color' -> 0xffffffff,
        'fill' -> true,
    };

    default_line_config = {
        'color' -> 0xffffffff,
    };

    // Type cheks and validations
    if(type(from) != 'entity' && type(from) != 'block', throw('`from` must be an entity or block'));

    if(type(to) != 'list', to = [to]);
    if(length(to) == 0, throw('`to` list cannot be empty'));

    entity_pos = pos(from);

    if(block_config == null, block_config = default_block_config);
    if(line_config == null, line_config = default_line_config);

    b_from_offset = if(offset:'block':'from' != null, offset:'block':'from', [0, 0, 0]);
    b_to_offset = if(offset:'block':'to' != null, offset:'block':'to', [0, 0, 0]);

    l_from_offset = if(offset:'line':'from' != null, offset:'line':'from', [0, 0, 0]);
    l_to_offset = if(offset:'line':'to' != null, offset:'line':'to', [0, 0, 0]);

    for(to,
        to_pos = pos(_);

        block_config:'from' = to_pos + b_from_offset;
        block_config:'to' = to_pos + [1, 1, 1] + b_to_offset;
        draw_shape('box', ticks, block_config);

        line_config:'from' = entity_pos + l_from_offset;
        line_config:'to' = to_pos + l_to_offset;
        draw_shape('line', ticks, line_config);
    );
);

draw_label_list(position, labels, ticks) -> (
    if(length(labels) == 0, return());

    for(labels,
        draw_shape('label', ticks, {
            'pos' -> position + [0, length(labels) * 0.25, 0],
            'text' -> _,
            'fill' -> 0x00000088,
            'height' -> -_i,
            'align' -> 'left',
        });
    );
);